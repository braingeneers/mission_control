version: '3.8'

# ===========================================================================================
# PRE-REQUISITE:
#   This docker-compose script depends on one file on the host machine: ~/.kube/config
#   This is obtained by logging into https://portal.nrp-nautlius.io and clicking "Get Config".
#   You must have access to the braingeneers namespace. If you don't have access see the
#   wiki Permissions page or Onboarding page for instructions.
# ===========================================================================================

services:

  # The secret-fetcher container retrieves all secrets in the `braingeneers` namespace on kubernetes.
  # The files are saved to a shared volume typically mounted at `/secrets`. So for example, the AWS credentials
  # file would be found at `/secrets/prp-s3-credentials/credentials`.
  # The secret-fetcher container is typically a dependency of other containers that need access to the secrets.
  secret-fetcher:
    image: braingeneers/secret-fetcher:latest
    container_name: secret-fetcher
    user: root
    volumes:
      - ~/.kube/config:/.kube/config
      - secrets:/secrets
    networks:
      - braingeneers-net
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      interval: 5s
      timeout: 5s
      retries: 120  # Retries allows for max of 10 minutes for secrets to be fetched before service is permanently marked as unhealthy

  # MQTT broker
  mqtt:
    image: braingeneers/mqtt:latest   # derived from emqx/emqx:5.0.4
    container_name: mqtt
    restart: always
    ports:
      - "1883:1883"
      - "8083:8083"
      - "8883:8883"
      - "8084:8084"
      - "18083:18083"
    environment:
      EMQX_NAME: braingeneers_emqx
      EMQX_HOST: 127.0.0.1
    networks:
      braingeneers-net:
        aliases:
          - mqtt.braingeneers.gi.ucsc.edu

  # The nginx-proxy container is used to route traffic to the appropriate service based on the domain name.
  nginx-proxy:
    image: jwilder/nginx-proxy:latest  # braingeneers/nginx-proxy:latest  # derived from jwilder/nginx-proxy:latest
    container_name: nginx-proxy
    volumes:
      - vol-certs:/etc/nginx/certs  # Cache SSL certificates on the host
      - vol-vhost:/etc/nginx/vhost.d
      - vol-html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro  # Unix socket mount to access docker API read-only
    networks:
      - braingeneers-net
#    environment:
#      DEBUG: "true"
#      VERBOSE: "true"
#      FORCE_INTERVAL: 15s
#      LETSENCRYPT_HOST: braingeneers.gi.ucsc.edu
#      LETSENCRYPT_EMAIL: braingeners-admins-group@ucsc.edu
#      LETSENCRYPT_TEST: "false"
#      DEFAULT_HOST: braingeneers.gi.ucsc.edu
#      DEFAULT_PORT: "8080"
    ports:
      - "80:80"
      - "443:443"

  # Debugging container to test nginx-proxy
  whoami:
    image: jwilder/whoami
    expose:
      - "8000"
    environment:
      VIRTUAL_HOST: "whoami.braingeneers.gi.ucsc.edu"
      VIRTUAL_PORT: "8000"
      LETSENCRYPT_HOST: "whoami.braingeneers.gi.ucsc.edu"
      LETSENCRYPT_EMAIL: "braingeneers-admins-group@ucsc.edu"
    networks:
      - braingeneers-net

  # Ella's website (maxwell related)
  mxvisuals:
    image: mirellameelo/visualsmaxwell-frontend:v0.2
    expose:
      - "3000"
    environment:
      VIRTUAL_HOST: "mxvisuals.braingeneers.gi.ucsc.edu"
      VIRTUAL_PORT: "3000"
      LETSENCRYPT_HOST: "mxvisuals.braingeneers.gi.ucsc.edu"
      LETSENCRYPT_EMAIL: "braingeneers-admins-group@ucsc.edu"
    networks:
      - braingeneers-net

  # Ella's website (maxwell related)
  mxvisuals-backend:
    image: mirellameelo/visualsmaxwell-backend:v0.2
    entrypoint: /secrets/entrypoint-secrets-setup.sh
    command:
      - "--copy"
      - "/secrets/prp-s3-credentials/credentials:/home/jovyan/.aws/credentials"
      - "python3"
      - "-u"
      - "main.py"
    expose:
      - "5000"
    environment:
      DEBUG: "true"
      VIRTUAL_HOST: "mxvisuals-backend.braingeneers.gi.ucsc.edu"
      VIRTUAL_PORT: "5000"
      LETSENCRYPT_HOST: "mxvisuals-backend.braingeneers.gi.ucsc.edu"
      LETSENCRYPT_EMAIL: "braingeneers-admins-group@ucsc.edu"
    networks:
      - braingeneers-net
    volumes:
      - secrets:/secrets
    depends_on:
      secret-fetcher:
        condition: service_healthy

  # The letsencrypt container is used to automatically generate SSL certificates for the domain names.
  # https://github.com/jwilder/docker-letsencrypt-nginx-proxy-companion
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    environment:
      VIRTUAL_HOST: "auth.braingeneers.gi.ucsc.edu"
      VIRTUAL_PORT: "80"
      LETSENCRYPT_HOST: "auth.braingeneers.gi.ucsc.edu"
      LETSENCRYPT_EMAIL: "braingeneers-admins-group@ucsc.edu"
      NGINX_PROXY_CONTAINER: "nginx-proxy"
      LETSENCRYPT_TEST: "false"   # true | false for debugging | production (remember to set corresponding value in NGINX)
      DEBUG: "0"   # 1 | 0 for debugging | production (remember to set corresponding value in nginx-proxy)
      # ACME_CA_URI: "https://acme-staging-v02.api.letsencrypt.org/directory"  # comment out for production use
    volumes:
      - vol-certs:/etc/nginx/certs:rw  # Shared with nginx-proxy
      - vol-vhost:/etc/nginx/vhost.d
      - vol-html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro  # Unix socket mount to access docker API read-only
    depends_on:
      - nginx-proxy
    networks:
      - braingeneers-net

  # The oauth2_proxy container is used to authenticate users before they can access braingeneers services.
  oauth2-proxy:
    image: braingeneers/oauth2-proxy:latest
    container_name: oauth2-proxy
    command: /run.sh
    entrypoint: /bin/sh
    volumes:
      - vol-certs:/etc/ssl/certs  # SSL certificates
      - secrets:/secrets
    networks:
      - braingeneers-net
    environment:
      # Settings to define a subdomain for this application
      - VIRTUAL_HOST=auth.braingeneers.gi.ucsc.edu
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=auth.braingeneers.gi.ucsc.edu
      - LETSENCRYPT_EMAIL=braingeners-admins-group@ucsc.edu
    depends_on:
      secret-fetcher:
        condition: service_healthy

  # The dashboard container is used to host the braingeneers dashboard.
  dashboard:
    image: braingeneers/dashboard:v1.5
    container_name: dashboard
    expose:
      - "8050"
    environment:
      - VIRTUAL_HOST=dashboard.braingeneers.gi.ucsc.edu
      - VIRTUAL_PORT=8050
      - LETSENCRYPT_HOST=dashboard.braingeneers.gi.ucsc.edu
      - LETSENCRYPT_EMAIL=braingeners-admins-group@ucsc.edu
    volumes:
      - ~/.aws/credentials:/root/.aws/credentials:ro  # AWS credentials for your application
    networks:
      - braingeneers-net
    depends_on:
      - secret-fetcher

  # Slack bridge service, replicates messages between Slack and MQTT
  # Documentation: https://github.com/braingeneers/wiki/blob/main/api_data/slack-bridge.md
  slack-bridge:
    image: braingeneers/service-slack-bridge:latest
    container_name: slack-bridge
    ports:
      - "3000:3000"
    networks:
      - braingeneers-net
    depends_on:
      secret-fetcher:
        condition: service_healthy
    volumes:
      - secrets:/secrets

  # Shadows frontend web service maintained by Pierre
  shadows-vue:
    container_name: shadows_frontend
    build: shadows_vue/
    image: shadows_viewer:latest
    restart: unless-stopped
    networks:
      - braingeneers-net
#    ports:
#      - "127.0.0.1:8057:80"
    environment:
      - VIRTUAL_HOST=datahub.braingeneers.gi.ucsc.edu
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST="datahub.braingeneers.gi.ucsc.edu"
      - LETSENCRYPT_EMAIL="braingeneers-admins-group@ucsc.edu"

  # picroscope experiment control console
  # plotly dash
  picroscope-console:
    build:  plotly-dash-picroscope-control-console/ 
    container_name: plotly-picroscope-console
      # ports:
      #      - "127.0.0.1:8051:8050"
    networks:
      - braingeneers-net
    entrypoint: /secrets/entrypoint-secrets-setup.sh
    command:
      - '--copy'
      - '/secrets/picroscope-console-user-credentials/users.py:/console/users.py'
      - '--copy'
      - '/secrets/prp-s3-credentials/credentials:/root/.aws/credentials'
      - '/bin/bash'
      - '-c'
      - 'python app.py'
    environment:
      - VIRTUAL_HOST=picroscope.braingeneers.gi.ucsc.edu
      - VIRTUAL_PORT=8050
      - LETSENCRYPT_HOST="picroscope.braingeneers.gi.ucsc.edu"
      - LETSENCRYPT_EMAIL="braingeneers-admins-group@ucsc.edu"
    depends_on:
      secret-fetcher:
        condition: service_healthy
    volumes:
      - ./plotly-dash-picroscope-control-console/.env:/console/.env
      - secrets:/secrets
    restart: unless-stopped

  shadows-db:
    container_name: strapi-shadows-db
    build: strapi-shadows-db/
    image: mystrapi:latest
    restart: unless-stopped
    networks:
     - braingeneers-net
    entrypoint: /secrets/entrypoint-secrets-setup.sh
    command:
      - '--copy'
      - '/secrets/strapi-shadows-db/strapi_shadows_db.env:/opt/app/.env'
      - '--copy'
      - '/secrets/prp-s3-credentials/credentials:/root/.aws/credentials'
      - '--env'
      - '/secrets/strapi-shadows-db/strapi_shadows_db.env'
      - '/bin/bash'
      - '-c'
      - 'echo "app keys and salt: $$APP_KEYS $$API_TOKEN_SALT" && cron && npm run develop'
    environment:
      - VIRTUAL_HOST=shadows-db.braingeneers.gi.ucsc.edu
      - VIRTUAL_PORT=1337
      - LETSENCRYPT_HOST="shadows-db.braingeneers.gi.ucsc.edu"
      - LETSENCRYPT_EMAIL="braingeneers-admins-group@ucsc.edu"
#    user: "0:989"
    depends_on:
      secret-fetcher:
        condition: service_healthy
    volumes:
      - secrets:/secrets
      - vol-strapi-shadows-db:/opt/app/.tmp
      - ./strapi-shadows-db/config:/opt/app/config
      - ./strapi-shadows-db/src:/opt/app/src
      - ./strapi-shadows-db/package.json:/opt/package.json
      - ./strapi-shadows-db/package-lock.json:/opt/package-lock.json

  # job-launcher launches NRP jobs based on MQTT messages see repo mqtt_job_listener
  job-launcher:
    image: braingeneers/job-launcher:latest
    container_name: job-launcher
    networks:
      - braingeneers-net
    depends_on:
      secret-fetcher:
        condition: service_healthy
    volumes:
      - secrets:/secrets

  # Redis service
  redis:
    image: braingeneers/redis:latest
    container_name: redis
    networks:
      braingeneers-net:
        aliases:
          - redis.braingeneers.gi.ucsc.edu
    restart: unless-stopped
    volumes:
      - secrets:/secrets
    depends_on:
      secret-fetcher:
        condition: service_healthy
    ports:
     - "6379:6379"

      # The braingeneers-net network is used to connect the containers together.
networks:
  braingeneers-net:
    driver: bridge


# Volumes are persisted on the host machine.
# All services should be able to cold start when volumes are cleared, these are not a place for
# permanent files that can't be replaced, those should be stored on S3 and copied in if needed.
volumes:

  # A shared volume for secrets only in-memory for security this is populated by the secret-fetcher service
  secrets:
    driver_opts:
      type: tmpfs
      device: tmpfs

  # Volumes for nginx-proxy, letsencrypt, and oauth2-proxy shared for SSL certificates
  vol-certs:
  vol-vhost:
  vol-html:
#  vol-acme.sh:

  # Volume for strapi shadows database
  vol-strapi-shadows-db: