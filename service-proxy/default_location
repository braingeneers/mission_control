# Always perform auth_request if auth is required
set $auth_status 200;
if ($auth_required = 1) {
    auth_request /oauth2/auth;
    auth_request_set $auth_status $upstream_status;
}

# Handle authentication failure
if ($auth_status != 200) {
    return 302 $scheme://auth.braingeneers.gi.ucsc.edu:8443/oauth2/start?rd=$original_url;
}

# Pass auth response headers
auth_request_set $auth_user $upstream_http_x_auth_request_user;
auth_request_set $auth_email $upstream_http_x_auth_request_email;

# Set custom headers
proxy_set_header X-User $auth_user;
proxy_set_header X-Email $auth_email;

# Preserve original host and client info
proxy_set_header Host $original_host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;

# If auth was successful or not required, proxy to the dynamically discovered backend
proxy_pass http://$original_host;